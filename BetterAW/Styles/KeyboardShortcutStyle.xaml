<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:BetterAW"
                    xmlns:i="clr-namespace:Microsoft.Xaml.Behaviors;assembly=Microsoft.Xaml.Behaviors">

    <Style x:Key="ButtonFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Border>
                        <Rectangle Margin="2"
                             StrokeThickness="1"
                             Stroke="#60000000"
                             StrokeDashArray="1 2" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="Button" x:Key="KeyboardShortcutButton">
        <Setter Property="FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}" />
        <Setter Property="OverridesDefaultStyle" Value="true" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border TextBlock.Foreground="White" x:Name="Border" CornerRadius="3" BorderThickness="0" >
                        <Border.Background>
                            <SolidColorBrush Color="#2094e0"/>
                        </Border.Background>
                        <Grid>
                            <Border ClipToBounds="True" >
                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" RecognizesAccessKey="True" />
                            </Border>
                            <Border ClipToBounds="True" CornerRadius="5" x:Name="ClippingBorder">
                                <Border.Clip>
                                    <MultiBinding>
                                        <MultiBinding.Converter>
                                            <local:BorderClipConverter></local:BorderClipConverter>
                                        </MultiBinding.Converter>
                                        <Binding Path="ActualWidth" RelativeSource="{RelativeSource Self}"/>
                                        <Binding Path="ActualHeight" RelativeSource="{RelativeSource Self}"/>
                                        <Binding Path="CornerRadius" RelativeSource="{RelativeSource Self}"/>
                                    </MultiBinding>
                                </Border.Clip>
                                <Border Background="Transparent" CornerRadius="3" x:Name="InnerBorder">
                                </Border>
                            </Border>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsDefault" Value="true">
                            <Setter TargetName="Border" Property="BorderBrush">
                                <Setter.Value>
                                    <SolidColorBrush Color="#77DDDD"/>

                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Border" Property="Effect">
                                <Setter.Value>
                                    <DropShadowEffect ShadowDepth="0" Color="Black" Opacity="0.5" BlurRadius="5"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="InnerBorder" Property="Background">
                                <Setter.Value>
                                    <SolidColorBrush Color="#33000000" />
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="Border" Property="Effect">
                                <Setter.Value>
                                    <DropShadowEffect ShadowDepth="0" Color="Black" Opacity="0.5" BlurRadius="5"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style TargetType="local:KeyboardShortcut">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="local:KeyboardShortcut">
					<Grid Height="30" Name="BaseGrid" VerticalAlignment="Stretch" Background="#EEEEEE">
						<Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="60"/>
                            <ColumnDefinition Width="60"/>
                            <ColumnDefinition Width="60"/>
                        </Grid.ColumnDefinitions>
                        <Label Foreground="#4b4b4b" Content="{TemplateBinding ShortcutText}"  Margin="2" VerticalAlignment="Center" />
                        <Button Style="{StaticResource KeyboardShortcutButton}" Grid.Column="1"  Margin="2" Command="{TemplateBinding RemoveShorcutEvent}">
                            <Label HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Content="Remove" FontWeight="Bold" Foreground="White"/>
                        </Button>
                        <Button Style="{StaticResource KeyboardShortcutButton}" Grid.Column="2"  Margin="2" Command="{TemplateBinding AddShorcutEvent}">
                            <Label HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Content="Rebind" FontWeight="Bold" Foreground="White"/>
                        </Button>
                        <Label Foreground="#4b4b4b" Content="{TemplateBinding ShortcutKeybindText}" Margin="2" Grid.Column="3" VerticalAlignment="Center" HorizontalAlignment="Right"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="BaseGrid" Property="Background">
                                <Setter.Value>
                                    <SolidColorBrush Color="#DDDDDD"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>


    <Style TargetType="local:LanguageShortcut">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="local:LanguageShortcut">
                    <Grid Height="30" Name="BaseGrid" VerticalAlignment="Stretch" Background="#EEEEEE">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="60"/>
                        </Grid.ColumnDefinitions>
                        <StackPanel Orientation="Horizontal">
                            <ContentControl VerticalContentAlignment="Stretch" HorizontalContentAlignment="Stretch"  Margin="5" Width="20" Height="20" Visibility="{TemplateBinding IconVisibility}" Content="{TemplateBinding Icon}"/>
                            <Label Foreground="#4b4b4b" Content="{TemplateBinding ShortcutText}"  Margin="2" VerticalAlignment="Center" />
                        </StackPanel>
                        <!--{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Checked, Mode=TwoWay}-->
                        <CheckBox Grid.Column="1"  Margin="2" IsChecked="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Checked, Mode=TwoWay}" VerticalAlignment="Center" HorizontalAlignment="Center">
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="Checked" >
                                    <i:InvokeCommandAction Command="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=CheckedEvent}" />
                                </i:EventTrigger>
                                <i:EventTrigger EventName="Unchecked" >
                                    <i:InvokeCommandAction Command="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=UncheckedEvent}" />
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                        </CheckBox>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="BaseGrid" Property="Background">
                                <Setter.Value>
                                    <SolidColorBrush Color="#DDDDDD"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="Label" x:Key="KeyboardShortcutTitle">
        <Setter Property="Foreground" Value="#4b4b4b"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
    </Style>

    <Style TargetType="local:KeyboardShortcutLabel">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="local:KeyboardShortcutLabel">
                    <Label Style="{StaticResource KeyboardShortcutTitle}" Content="{TemplateBinding Content}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>